local omgruntime = require("omgservers.omgruntime.omgruntime")

local LOBBY_RUNTIME = "lobby_runtime#lobby_runtime"
local MATCH_RUNTIME = "match_runtime#match_runtime"

local function handle_server_event(self, event)
	print(socket.gettime() .. " [SERVER_MANAGER] Event was received, event=" .. json.encode(event))

	local event_qualifier = event.qualifier

	if event_qualifier == omgruntime.constants.SERVER_STARTED then
		local event_body = event.body
		local runtime_qualifier = event_body.runtime_qualifier
		print(socket.gettime() .. " [SERVER_MANAGER] Server was started, qualifier=" .. runtime_qualifier)
		self.runtime_qualifier = runtime_qualifier
	end

	local runtime_qualifier = self.runtime_qualifier
	if runtime_qualifier then
		if runtime_qualifier == omgruntime.constants.LOBBY then
			msg.post(LOBBY_RUNTIME, "server_event", event)
		elseif runtime_qualifier == omgruntime.constants.MATCH then
			msg.post(MATCH_RUNTIME, "server_event", event)
		else
			print("[SERVER_MANAGER] Unsupported runtime qualifier, runtime_qualifier=" .. tostring(runtime_qualifier))
		end
	end
end

function init(self)
	local options = {
		event_handler = function(event) handle_server_event(self, event) end,
		debug_logging = true,
		trace_logging = false,
	}
	omgruntime:init(options)
	omgruntime:start()
end

function update(self, dt)
	omgruntime:update(dt)
end