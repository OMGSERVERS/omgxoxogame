local omgruntime = require("omgservers.omgruntime.omgruntime")

local SERVER_EVENT_HASH = hash("server_event")

local function handle_message(self, client_id, message)
	print(os.date() .. " [LOBBY] Message from client " .. tostring(client_id) .. " was received:")
	pprint(message)
	
	local message_qualifier = message.qualifier
	if message_qualifier then
		if message_qualifier == "matchmaking_request" then
			omgruntime:request_matchmaking(client_id, "xoxo")
		else
			print(os.date() .. " [LOBBY] Unknown qualifier=" .. message_qualifier)
		end
	else
		print(os.date() .. " [LOBBY] Message qualifier is nil")
	end
end

local function handle_started(self)
	print(os.date() .. " [LOBBY] Lobby was started")
end

local function handle_command(self, command_qualifier, command_body)
	if command_qualifier == omgruntime.constants.INIT_RUNTIME then
		local runtime_config = command_body.runtime_config
		local version_config = runtime_config.version_config
		print(os.date() .. " [LOBBY] Runtime was initialized:")
		pprint(version_config)

	elseif command_qualifier == omgruntime.constants.ADD_CLIENT then
		local user_id = command_body.user_id
		local client_id = command_body.client_id
		local profile = command_body.profile
		print(os.date() .. " [LOBBY] Client " .. client_id .. " of user " .. user_id .. " was added")
		print(os.date() .. " [LOBBY] Profile:")
		pprint(profile)

	elseif command_qualifier == omgruntime.constants.DELETE_CLIENT then
		local client_id = command_body.client_id
		print(os.date() .. " [LOBBY] Client " .. client_id .. " was deleted")

	elseif command_qualifier == omgruntime.constants.HANDLE_MESSAGE then
		local client_id = command_body.client_id
		local message = command_body.message
		local status, result = pcall(json.decode, message)
		if status then
			handle_message(self, client_id, result)
		end
	else
		print("[LOBBY_MANAGER] Unsupported command was received, command_qualifier=" .. tostring(command_qualifier))
	end
end

function on_message(self, message_id, message, sender)
	if message_id == SERVER_EVENT_HASH then
		local event = message
		local event_qualifier = event.qualifier
		local event_body = event.body

		if event_qualifier == omgruntime.constants.SERVER_STARTED then
			handle_started(self)
		elseif event_qualifier == omgruntime.constants.COMMAND_RECEIVED then
			local command_qualifier = event_body.qualifier
			local command_body = event_body.body
			handle_command(self, command_qualifier, command_body)

		else
			print("[LOBBY_MANAGER] Unsupported event was received, event_qualifier=" .. tostring(event_qualifier))
		end
	end
end